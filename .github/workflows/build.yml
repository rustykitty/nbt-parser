name: Build

on:
  push:
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install build dependencies (Ubuntu)
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        run: |
          sudo apt update
          sudo apt install build-essential -y
      - name: Install build dependencies (macOS)
        if: ${{ startsWith(matrix.os, 'macos') }}
        run: |
          brew install gcc@14 make
          echo "PATH=$HOMEBREW_PREFIX/opt/make/libexec/gnubin:$PATH" >> $GITHUB_ENV
          ln -sf $(brew --prefix gcc)/bin/gcc-14 /usr/local/bin/gcc
          ln -sf $(brew --prefix gcc)/bin/g++-14 /usr/local/bin/g++
      - name: Chocolatey cache (Windows)
        if: ${{ startsWith(matrix.os, 'windows') }}
        uses: actions/cache@v4
        with:
          path: '%HOMEDRIVE%%HOMEPATH%\AppData\Local\Temp\chocolatey'
          key: ${{ runner.os }}-choco-${{ hashFiles('**/chocolatey.config') }}
      - name: Install build dependencies (Windows)
        if: ${{ startsWith(matrix.os, 'windows') }}
        run: |
          choco install mingw make -y
          echo "PATH=C:\ProgramData\chocolatey\bin;$PATH" >> $env:GITHUB_ENV
          echo "CC=gcc" >> $env:GITHUB_ENV
          echo "CXX=g++" >> $env:GITHUB_ENV
      - name: Build
        run: |
          make
      - name: Run tests
        run: |
          make test
# AppData\Local\Temp\chocolatey
#  echo "PATH=C:\Program Files\mingw-w64\mingw64\bin;$PATH" >> $env:GITHUB_ENV
